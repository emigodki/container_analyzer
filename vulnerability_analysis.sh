#!/bin/bash
set -euo pipefail

imagenes_file="imagenes_a_analizar.txt"
TMP_DIR="../../tmp"  # Relativo a Proyects/NOMBRE_PROYECTO

if [ ! -f "$imagenes_file" ]; then
    echo "Archivo $imagenes_file no encontrado. Ejecuta primero main.sh"
    exit 1
fi

mkdir -p reportes_json reportes_csv reportes_md reportes_html "$TMP_DIR"

while IFS= read -r imagen; do
    imagen=$(echo "$imagen" | xargs)
    [ -z "$imagen" ] && continue
    echo "Procesando imagen '$imagen'..."

    nombre_archivo=$(echo "$imagen" | tr '/:' '__')
    tarfile="$TMP_DIR/${nombre_archivo}.tar"
    jsonfile="reportes_json/${nombre_archivo}.json"
    htmlfile="reportes_html/${nombre_archivo}.html"

    # Pull solo si no existe localmente
    if ! podman image exists "$imagen"; then
        echo "La imagen $imagen no está localmente, descargando..."
        podman pull "$imagen"
    fi

    # Guardar en tmp global si no existe ya el .tar
    if [ ! -f "$tarfile" ]; then
        echo "Guardando imagen $imagen en $tarfile ..."
        podman save -o "$tarfile" "$imagen"
    else
        echo "Ya existe $tarfile, usando caché global."
    fi

    trivy image --input "$tarfile" --format json -o "$jsonfile" --severity CRITICAL,HIGH,MEDIUM,LOW
    trivy image --input "$tarfile" --format template --template "$HOME/container-analysis-and-report/contrib/csv.tpl" --severity CRITICAL,HIGH,MEDIUM,LOW -o "reportes_csv/${nombre_archivo}.csv"
    trivy image --input "$tarfile" --format table --severity CRITICAL,HIGH,MEDIUM,LOW -o "reportes_md/${nombre_archivo}.md"
    trivy scan2html generate --output "$htmlfile" --from "$jsonfile"
done < "$imagenes_file"

echo "Escaneo terminado."

